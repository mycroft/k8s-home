# https://github.com/hashicorp/vault-helm/blob/main/values.yaml

server:
  logLevel: "debug"
  logFormat: "standard"

  dataStorage:
    enabled: true
    size: 1Gi
    mountPath: "/vault/data"
    storageClass: longhorn-crypto-global
    accessMode: ReadWriteOnce

  auditStorage:
    enabled: true
    size: 1Gi
    mountPath: "/vault/audit"
    storageClass: longhorn-crypto-global
    accessMode: ReadWriteOnce


  standalone:
    config: |
      ui = true

      listener "tcp" {
        tls_disable = 1
        address = "[::]:8200"
        cluster_address = "[::]:8201"
        # Enable unauthenticated metrics access (necessary for Prometheus Operator)
        telemetry {
          unauthenticated_metrics_access = "true"
        }
      }
      storage "file" {
        path = "/vault/data"
      }

      # Example configuration for using auto-unseal, using Google Cloud KMS. The
      # GKMS keys must already exist, and the cluster must have a service account
      # that is authorized to access GCP KMS.
      #seal "gcpckms" {
      #   project     = "vault-helm-dev"
      #   region      = "global"
      #   key_ring    = "vault-helm-unseal-kr"
      #   crypto_key  = "vault-helm-unseal-key"
      #}

      # Example configuration for enabling Prometheus metrics in your config.
      telemetry {
        prometheus_retention_time = "30s"
        disable_hostname = true
      }

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      traefik.ingress.kubernetes.io/redirect-entry-point: https
      traefik.ingress.kubernetes.io/redirect-permanent: "true"

    hosts:
      - host: vault.services.mkz.me
        paths: []

    ingressClassName: traefik

    tls:
      - secretName: vault-tls
        hosts:
          - vault.services.mkz.me

injector:
  logLevel: "debug"
  logFormat: "standard"

ui:
  enabled: true

serverTelemetry:
  serviceMonitor:
    enabled: true
  prometheusRules:
    enabled: true