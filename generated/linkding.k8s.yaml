apiVersion: v1
kind: Namespace
metadata:
  name: linkding
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: secretstore-vault
  namespace: linkding
spec:
  provider:
    vault:
      auth:
        kubernetes:
          mountPath: kubernetes
          role: external-secrets
      path: secret
      server: http://vault.vault:8200
      version: v2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: linkding
  name: linkding-linkding-svc-c8a6d246
  namespace: linkding
spec:
  ports:
    - name: http
      port: 9090
  selector:
    app.kubernetes.io/name: linkding
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: linkding-linkding-sts-c83f867d
  namespace: linkding
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: linkding
  serviceName: linkding-linkding-svc-c8a6d246
  template:
    metadata:
      labels:
        app.kubernetes.io/name: linkding
    spec:
      containers:
        - env: []
          image: sissbruecker/linkding:1.37.0
          name: linkding
          volumeMounts:
            - mountPath: /etc/linkding/data
              name: data
      volumes: []
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/name: linkding
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: longhorn-crypto-global
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: linkding-ingress-c8c5befa
  namespace: linkding
spec:
  ingressClassName: traefik
  rules:
    - host: links.services.mkz.me
      http:
        paths:
          - backend:
              service:
                name: linkding-linkding-svc-c8a6d246
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - links.services.mkz.me
      secretName: secret-tls-www
