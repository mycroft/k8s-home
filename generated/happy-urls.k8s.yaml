apiVersion: v1
kind: Namespace
metadata:
  name: happy-urls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: happy-urls
  name: happy-urls-redis-svc-c8857158
  namespace: happy-urls
spec:
  ports:
    - name: http
      port: 6379
  selector:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: happy-urls
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: happy-urls-redis-sts-c8557871
  namespace: happy-urls
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: happy-urls
  serviceName: happy-urls-redis-svc-c8857158
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis
        app.kubernetes.io/name: happy-urls
    spec:
      containers:
        - command:
            - redis-server
            - --save
            - "60"
            - "1"
            - --loglevel
            - warning
          env: []
          image: redis:8.2.1
          name: redis
          volumeMounts:
            - mountPath: /data
              name: data
      volumes: []
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/component: redis
          app.kubernetes.io/name: happy-urls
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: longhorn-crypto-global
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: happy-urls-deploy-c8e5a5c2
  namespace: happy-urls
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: happy-urls
      app.kubernetes.io/name: happy-urls
  template:
    metadata:
      labels:
        app.kubernetes.io/component: happy-urls
        app.kubernetes.io/name: happy-urls
    spec:
      containers:
        - env:
            - name: REDIS_URL
              value: redis://happy-urls-redis-svc-c8857158:6379
          image: git.mkz.me/mycroft/happy-urls:latest
          imagePullPolicy: Always
          name: happy-urls
---
apiVersion: v1
kind: Service
metadata:
  name: happy-urls-svc-c8e83750
  namespace: happy-urls
spec:
  ports:
    - name: http
      port: 3000
  selector:
    app.kubernetes.io/component: happy-urls
    app.kubernetes.io/name: happy-urls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: happy-urls-ingress-c8b56949
  namespace: happy-urls
spec:
  ingressClassName: traefik
  rules:
    - host: happy-urls.services.mkz.me
      http:
        paths:
          - backend:
              service:
                name: happy-urls-svc-c8e83750
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - happy-urls.services.mkz.me
      secretName: secret-tls-www
