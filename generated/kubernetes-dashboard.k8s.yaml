apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: kubernetes-dashboard
  namespace: flux-system
spec:
  interval: 1m0s
  url: https://kubernetes.github.io/dashboard/
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-dashboard-helm-val-kubernetes-dashboard-c80a302b
  namespace: kubernetes-dashboard
data:
  values.yaml: |
    # See https://github.com/kubernetes/dashboard/blob/master/charts/kubernetes-dashboard/values.yaml

    app:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/redirect-entry-point: https
          traefik.ingress.kubernetes.io/redirect-permanent: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-forward-auth-traefik-forward-auth@kubernetescrd

        hosts:
          - kubernetes-dashboard.services.mkz.me

        ingressClassName: traefik

        tls:
          secretName: kubernetes-dashboard-tls

    extras:
      serviceMonitor:
        enabled: true

    # extraArgs:
    #   - --system-banner="Welcome to Kubernetes"
    #   - --enable-skip-login
    #   - --disable-settings-authorizer
    #   - --enable-insecure-login
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  annotations:
    configMapHash: 42a42764f589e7df29c08d845f22da33b21d8d7fd999ba52fc3c7a6467839abf
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  chart:
    spec:
      chart: kubernetes-dashboard
      sourceRef:
        kind: HelmRepository
        name: kubernetes-dashboard
        namespace: flux-system
      version: 7.1.1
  install:
    createNamespace: false
    skipCRDs: false
  interval: 1m0s
  values: {}
  valuesFrom:
    - kind: ConfigMap
      name: kubernetes-dashboard-helm-val-kubernetes-dashboard-c80a302b
      valuesKey: values.yaml
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin
    namespace: kubernetes-dashboard
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: admin
  name: secret-sa
  namespace: kubernetes-dashboard
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-role-read-only
rules:
  - apiGroups:
      - "*"
    resources:
      - namespaces
      - events
      - pods
      - cronjobs
      - jobs
      - replicasets
      - deployments
      - daemonsets
      - replicationcontrollers
      - statefulsets
      - ingresses
      - ingressesclasses
      - services
      - configmaps
      - persistentvolumeclaims
      - storageclasses
      - clusterrolebindings
      - clusterroles
      - networkpolicies
      - nodes
      - persistentvolumes
      - rolebindings
      - roles
      - serviceaccounts
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-role-read-only
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
