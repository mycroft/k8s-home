apiVersion: v1
kind: Namespace
metadata:
  name: vikunja
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: secretstore-vault
  namespace: vikunja
spec:
  provider:
    vault:
      auth:
        kubernetes:
          mountPath: kubernetes
          role: external-secrets
      path: secret
      server: http://vault.vault:8200
      version: v2
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vikunja-es-postgresql-c8ccc3dd
  namespace: vikunja
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/vikunja/postgresql
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: postgresql
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vikunja-es-openid-c82c8fbc
  namespace: vikunja
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/vikunja/openid
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: openid
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vikunja-config-c8098df7
  namespace: vikunja
data:
  config.yml: |
    # Vikunja needs to know the frontend URL for password reset emails.
    # So you might need to provide its value, if you're not using an ingress.
    service:
      enableregistration: true
      publicurl: https://vikunja.services.mkz.me

    log:
      level: DEBUG

    mailer:
      enabled: false

    metrics:
      enabled: true

    auth:
      local:
        enabled: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: vikunja
  name: vikunja-vikunja-svc-c82a993d
  namespace: vikunja
spec:
  ports:
    - name: http
      port: 3456
  selector:
    app.kubernetes.io/name: vikunja
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vikunja-vikunja-sts-c8b9d8b1
  namespace: vikunja
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: vikunja
  serviceName: vikunja-vikunja-svc-c82a993d
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vikunja
    spec:
      containers:
        - env:
            - name: VIKUNJA_DATABASE_TYPE
              value: postgres
            - name: VIKUNJA_DATABASE_NAME
              value: vikunja
            - name: VIKUNJA_DATABASE_HOST
              value: postgres-instance.postgres
            - name: VIKUNJA_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: postgresql
            - name: VIKUNJA_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgresql
            - name: VIKUNJA_AUTH_OPENID_PROVIDERS
              value: authentik
            - name: VIKUNJA_AUTH_OPENID_PROVIDERS_AUTHENTIK_NAME
              value: authentik
            - name: VIKUNJA_AUTH_OPENID_PROVIDERS_AUTHENTIK_AUTHURL
              valueFrom:
                secretKeyRef:
                  key: auth_url
                  name: openid
            - name: VIKUNJA_AUTH_OPENID_PROVIDERS_AUTHENTIK_LOGOUTURL
              valueFrom:
                secretKeyRef:
                  key: logout_url
                  name: openid
            - name: VIKUNJA_AUTH_OPENID_PROVIDERS_AUTHENTIK_CLIENTID
              valueFrom:
                secretKeyRef:
                  key: clientid
                  name: openid
            - name: VIKUNJA_AUTH_OPENID_PROVIDERS_AUTHENTIK_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  key: clientsecret
                  name: openid
          image: vikunja/vikunja:0.24.6
          name: vikunja
          volumeMounts:
            - mountPath: /app/vikunja/files
              name: data
            - mountPath: /etc/vikunja
              name: config
      volumes:
        - configMap:
            name: vikunja-config-c8098df7
          name: config
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/name: vikunja
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: longhorn-crypto-global
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: vikunja-ingress-c8bc518a
  namespace: vikunja
spec:
  ingressClassName: traefik
  rules:
    - host: vikunja.services.mkz.me
      http:
        paths:
          - backend:
              service:
                name: vikunja-vikunja-svc-c82a993d
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - vikunja.services.mkz.me
      secretName: secret-tls-www
