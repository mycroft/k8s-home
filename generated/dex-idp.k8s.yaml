apiVersion: v1
kind: Namespace
metadata:
  name: dex-idp
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: secretstore-vault
  namespace: dex-idp
spec:
  provider:
    vault:
      auth:
        kubernetes:
          mountPath: kubernetes
          role: external-secrets
      path: secret
      server: http://vault.vault:8200
      version: v2
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: dex
  namespace: flux-system
spec:
  interval: 1m0s
  url: https://charts.dexidp.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex-idp-helm-val-dex-c812a9f8
  namespace: dex-idp
data:
  values.yaml: |
    # https://github.com/dexidp/helm-charts/blob/master/charts/dex/values.yaml

    # The secrets to read & to put in dex pods
    envVars:
      - name: "GITEA_CLIENT_ID"
        valueFrom:
          secretKeyRef:
            name: "gitea"
            key: "client_id"
      - name: "GITEA_CLIENT_SECRET"
        valueFrom:
          secretKeyRef:
            name: "gitea"
            key: "client_secret"
      - name: "GITEA_BASEURL"
        valueFrom:
          secretKeyRef:
            name: "gitea"
            key: "base_url"
      - name: "STATIC_ADMIN_EMAIL"
        valueFrom:
          secretKeyRef:
            name: "static-admin"
            key: "email"
      - name: "STATIC_ADMIN_HASH"
        valueFrom:
          secretKeyRef:
            name: "static-admin"
            key: "hash"
      - name: "STATIC_ADMIN_USERNAME"
        valueFrom:
          secretKeyRef:
            name: "static-admin"
            key: "username"
      - name: "STATIC_ADMIN_UUID"
        valueFrom:
          secretKeyRef:
            name: "static-admin"
            key: "user_id"
    # Grafana
      - name: "GRAFANA_LOGIN_URL"
        valueFrom:
          secretKeyRef:
            name: "grafana-oidc-client"
            key: "login_url"
      - name: "GRAFANA_CLIENT_ID"
        valueFrom:
          secretKeyRef:
            name: "grafana-oidc-client"
            key: "client_id"
      - name: "GRAFANA_CLIENT_SECRET"
        valueFrom:
          secretKeyRef:
            name: "grafana-oidc-client"
            key: "client_secret"
    # traefik-forward-auth
      - name: "TRAEFIK_FORWARD_AUTH_REDIRECT_URI"
        valueFrom:
          secretKeyRef:
            name: "traefik-forward-auth-oidc"
            key: "redirect_uri"
      - name: "TRAEFIK_FORWARD_AUTH_CLIENT_ID"
        valueFrom:
          secretKeyRef:
            name: "traefik-forward-auth-oidc"
            key: "client_id"
      - name: "TRAEFIK_FORWARD_AUTH_CLIENT_SECRET"
        valueFrom:
          secretKeyRef:
            name: "traefik-forward-auth-oidc"
            key: "client_secret"
    # postgresql
      - name: "POSTGRESQL_USERNAME"
        valueFrom:
          secretKeyRef:
            name: "postgresql"
            key: "username"
      - name: "POSTGRESQL_PASSWORD"
        valueFrom:
          secretKeyRef:
            name: "postgresql"
            key: "password"


    # The configuration is now in the secret
    configSecret:
      create: false
      name: "dex-config"

    ingress:
      enabled: true

      annotations:
        kubernetes.io/ingress.class: "traefik"
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        traefik.ingress.kubernetes.io/redirect-entry-point: "https"
        traefik.ingress.kubernetes.io/redirect-permanent: "true"

      hosts:
        - host: dex.services.mkz.me
          paths:
            - path: /
              pathType: Prefix

      tls:
        - hosts:
            - dex.services.mkz.me
          secretName: dex-cert-tls

    serviceMonitor:
      enabled: true
      labels:
        release: prometheus
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  annotations:
    configMapHash: b8cdc1f60a4fa0c3fb153ec95ebce9b252e08666f3a9ce731bfd06fe29026e48
  name: dex
  namespace: dex-idp
spec:
  chart:
    spec:
      chart: dex
      sourceRef:
        kind: HelmRepository
        name: dex
        namespace: flux-system
      version: 0.14.3
  install:
    createNamespace: false
    skipCRDs: false
  interval: 1m0s
  values: {}
  valuesFrom:
    - kind: ConfigMap
      name: dex-idp-helm-val-dex-c812a9f8
      valuesKey: values.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: dex-config
  namespace: dex-idp
immutable: false
stringData:
  config.yaml: |
    # See https://github.com/dexidp/dex/blob/master/examples/config-dev.yaml
    # Note: Modifying this file makes it mandatory to restart the deployment!

    issuer: https://dex.services.mkz.me

    oauth2:
      skipApprovalScreen: true
      alwaysShowLoginScreen: false

    connectors:
    - type: gitea
      id: gitea
      name: Gitea
      config:
        clientID: "{{ .Env.GITEA_CLIENT_ID }}"
        clientSecret: "{{ .Env.GITEA_CLIENT_SECRET }}"
        redirectURI: https://dex.services.mkz.me/callback
        baseURL: "{{ .Env.GITEA_BASEURL }}"

    storage:
      type: postgres
      config:
        host: postgres-instance.postgres
        port: 5432
        database: dex
        user: "{{ .Env.POSTGRESQL_USERNAME }}"
        password: "{{ .Env.POSTGRESQL_PASSWORD }}"
        ssl:
          mode: require

    staticClients:
    - id: grafana
      redirectURIs:
      - {{ .Env.GRAFANA_LOGIN_URL }}
      name: "{{ .Env.GRAFANA_CLIENT_ID }}"
      secret: "{{ .Env.GRAFANA_CLIENT_SECRET }}"
    - id: traefik-forward-auth
      redirectURIs:
      - {{ .Env.TRAEFIK_FORWARD_AUTH_REDIRECT_URI }}
      name: "{{ .Env.TRAEFIK_FORWARD_AUTH_CLIENT_ID }}"
      secret: "{{ .Env.TRAEFIK_FORWARD_AUTH_CLIENT_SECRET }}"

    web:
      http: 0.0.0.0:5556

    telemetry:
      http: 0.0.0.0:5558

    enablePasswordDB: false

    # staticPasswords:
    # - email: "{{ .Env.STATIC_ADMIN_EMAIL }}"
    #   # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
    #   hash: "{{ .Env.STATIC_ADMIN_HASH }}"
    #   username: "{{ .Env.STATIC_ADMIN_USERNAME }}"
    #   userID: "{{ .Env.STATIC_ADMIN_UUID }}"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dex-idp-es-static-admin-c88f9c6e
  namespace: dex-idp
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/dex-idp/static-admin
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: static-admin
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dex-idp-es-gitea-c8bff4a6
  namespace: dex-idp
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/dex-idp/gitea
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: gitea
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dex-idp-es-grafana-oidc-client-c8bf7dc8
  namespace: dex-idp
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/dex-idp/grafana-oidc-client
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: grafana-oidc-client
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dex-idp-es-traefik-forward-auth-oidc-c84cf0c8
  namespace: dex-idp
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/dex-idp/traefik-forward-auth-oidc
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: traefik-forward-auth-oidc
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dex-idp-es-postgresql-c8fc46d7
  namespace: dex-idp
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/dex-idp/postgresql
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: postgresql
    template:
      engineVersion: v2
      type: Opaque
