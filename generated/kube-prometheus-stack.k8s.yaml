apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: secretstore-vault
  namespace: monitoring
spec:
  provider:
    vault:
      auth:
        kubernetes:
          mountPath: kubernetes
          role: external-secrets
      path: secret
      server: http://vault.vault:8200
      version: v2
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: flux-system
spec:
  interval: 1m0s
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kube-prometheus-stack-es-grafana-secret-c8d6fa88
  namespace: monitoring
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/monitoring/grafana-secret
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: grafana-secret
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: v1
kind: ConfigMap
data:
  values.yaml: |
    prometheus:
      prometheusSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 32Gi
              selector: {}

    grafana:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
          traefik.ingress.kubernetes.io/redirect-entry-point: "https"
          traefik.ingress.kubernetes.io/redirect-permanent: "true"

        hosts: ["grafana.services.mkz.me"]
        tls:
        - secretName: tls-grafana-cert
          hosts:
          - grafana.services.mkz.me
      admin:
        existingSecret: grafana-secret
        userKey: user
        passwordKey: password
metadata:
  name: kube-prometheus-stack-helm-values-c8217b7d
  namespace: monitoring
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  annotations:
    configMapHash: 60597abdf1ca29c5d9b43bfee11d8e0b138280aaa69431768846e47923e7a603
  name: prometheus
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: 41.3.1
  install:
    createNamespace: false
    skipCRDs: false
  interval: 1m0s
  values: {}
  valuesFrom:
    - kind: ConfigMap
      name: kube-prometheus-stack-helm-values-c8217b7d
      valuesKey: values.yaml
