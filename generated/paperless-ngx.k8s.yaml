apiVersion: v1
kind: Namespace
metadata:
  name: paperless-ngx
---
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: secretstore-vault
  namespace: paperless-ngx
spec:
  provider:
    vault:
      auth:
        kubernetes:
          mountPath: kubernetes
          role: external-secrets
      path: secret
      server: http://vault.vault:8200
      version: v2
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: paperless-ngx-es-postgresql-c89239a8
  namespace: paperless-ngx
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/paperless-ngx/postgresql
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: postgresql
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: paperless-ngx-es-sso-c85d3030
  namespace: paperless-ngx
spec:
  dataFrom:
    - extract:
        conversionStrategy: Default
        key: secret/namespaces/paperless-ngx/sso
  refreshInterval: 15m
  secretStoreRef:
    kind: SecretStore
    name: secretstore-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    immutable: false
    name: sso
    template:
      engineVersion: v2
      type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: redis
  name: paperless-ngx-redis-svc-c86d771a
  namespace: paperless-ngx
spec:
  ports:
    - name: http
      port: 6379
  selector:
    app.kubernetes.io/component: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: paperless-ngx-redis-sts-c8ae33ed
  namespace: paperless-ngx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
  serviceName: paperless-ngx-redis-svc-c86d771a
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis
    spec:
      containers:
        - command:
            - redis-server
            - --save
            - "60"
            - "1"
            - --loglevel
            - warning
          env: []
          image: redis:8.0.2
          name: redis
          volumeMounts:
            - mountPath: /data
              name: data
      volumes: []
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/component: redis
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: longhorn-crypto-global
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: paperless-ngx
  name: paperless-ngx-paperless-ngx-svc-c8f47743
  namespace: paperless-ngx
spec:
  ports:
    - name: http
      port: 8000
  selector:
    app.kubernetes.io/component: paperless-ngx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: paperless-ngx-paperless-ngx-sts-c8df4066
  namespace: paperless-ngx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: paperless-ngx
  serviceName: paperless-ngx-paperless-ngx-svc-c8f47743
  template:
    metadata:
      labels:
        app.kubernetes.io/component: paperless-ngx
    spec:
      containers:
        - env:
            - name: PAPERLESS_REDIS
              value: redis://paperless-ngx-redis-svc-c86d771a:6379
            - name: PAPERLESS_DBENGINE
              value: postgresql
            - name: PAPERLESS_DBHOST
              value: postgres-instance.postgres
            - name: PAPERLESS_DBPORT
              value: "5432"
            - name: PAPERLESS_DBNAME
              value: paperlessngx
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: postgresql
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgresql
            - name: PAPERLESS_URL
              value: https://paperless.services.mkz.me
            - name: PAPERLESS_MEDIA_ROOT
              value: /usr/src/paperless/media
            - name: PAPERLESS_DATA_DIR
              value: /usr/src/paperless/data
            - name: PAPERLESS_OCR_USER_ARGS
              value: '{"invalidate_digital_signatures": true}'
            - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              valueFrom:
                secretKeyRef:
                  key: providers
                  name: sso
            - name: PAPERLESS_APPS
              value: allauth.socialaccount.providers.openid_connect
            - name: PAPERLESS_DISABLE_REGULAR_LOGIN
              value: "true"
            - name: PAPERLESS_REDIRECT_LOGIN_TO_SSO
              value: "true"
            - name: PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS
              value: "false"
          image: paperlessngx/paperless-ngx:2.17.1
          name: paperless-ngx
          volumeMounts:
            - mountPath: /usr/src/paperless/data
              name: data
            - mountPath: /usr/src/paperless/media
              name: media
      volumes: []
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/component: paperless-ngx
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
        storageClassName: longhorn-crypto-global
    - metadata:
        labels:
          app.kubernetes.io/component: paperless-ngx
        name: media
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 32Gi
        storageClassName: longhorn-crypto-global
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: paperless-ngx-ingress-c8fe133e
  namespace: paperless-ngx
spec:
  ingressClassName: traefik
  rules:
    - host: paperless.services.mkz.me
      http:
        paths:
          - backend:
              service:
                name: paperless-ngx-paperless-ngx-svc-c8f47743
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - paperless.services.mkz.me
      secretName: secret-tls-www
