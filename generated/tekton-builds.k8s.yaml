apiVersion: v1
kind: Namespace
metadata:
  name: tekton-builds
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: hello
  namespace: tekton-builds
spec:
  steps:
    - image: alpine
      name: echo
      script: |
        #!/bin/sh
        echo "Hello World"
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: hello-task-run
  namespace: tekton-builds
spec:
  taskRef:
    name: hello
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: goodbye
  namespace: tekton-builds
spec:
  params:
    - name: username
      type: string
  steps:
    - image: ubuntu
      name: goodbye
      script: |
        #!/bin/bash
        echo "Goodbye $(params.username)!"
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: hello-goodbye
  namespace: tekton-builds
spec:
  params:
    - name: username
      type: string
  tasks:
    - name: hello
      taskRef:
        name: hello
    - name: goodbye
      params:
        - name: username
          value: $(params.username)
      runAfter:
        - hello
      taskRef:
        name: goodbye
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: hello-goodbye-run
  namespace: tekton-builds
spec:
  params:
    - name: username
      value: Tekton
  pipelineRef:
    name: hello-goodbye
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: hello-template
  namespace: tekton-builds
spec:
  params:
    - default: Kubernetes
      name: username
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: hello-goodbye-run-
      spec:
        params:
          - name: username
            value: $(tt.params.username)
        pipelineRef:
          name: hello-goodbye
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: hello-binding
  namespace: tekton-builds
spec:
  params:
    - name: username
      value: $(body.username)
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: hello-listener
  namespace: tekton-builds
spec:
  serviceAccountName: tekton-robot
  triggers:
    - bindings:
        - ref: hello-binding
      name: hello-trigger
      template:
        ref: hello-template
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: tekton-builds-robot
  namespace: tekton-builds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: triggers-example-eventlistener-binding
  namespace: tekton-builds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
subjects:
  - kind: ServiceAccount
    name: tekton-builds-robot
    namespace: tekton-builds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    build: k8s-home-tekton-cicd
  name: triggers-example-eventlistener-clusterbinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles
subjects:
  - kind: ServiceAccount
    name: tekton-builds-robot
    namespace: tekton-builds
