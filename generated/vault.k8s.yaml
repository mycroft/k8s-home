apiVersion: v1
kind: Namespace
metadata:
  name: vault
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: hashicorp
  namespace: flux-system
spec:
  interval: 1m0s
  url: https://helm.releases.hashicorp.com
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-helm-val-vault-c826ee21
  namespace: vault
data:
  values.yaml: |-
    # https://github.com/hashicorp/vault-helm/blob/main/values.yaml

    server:
      logLevel: "debug"
      logFormat: "standard"

      dataStorage:
        enabled: true
        size: 1Gi
        mountPath: "/vault/data"
        storageClass: longhorn-crypto-global
        accessMode: ReadWriteOnce

      auditStorage:
        enabled: true
        size: 1Gi
        mountPath: "/vault/audit"
        storageClass: longhorn-crypto-global
        accessMode: ReadWriteOnce


      standalone:
        config: |
          ui = true

          listener "tcp" {
            tls_disable = 1
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            # Enable unauthenticated metrics access (necessary for Prometheus Operator)
            telemetry {
              unauthenticated_metrics_access = "true"
            }
          }
          storage "file" {
            path = "/vault/data"
          }

          # Example configuration for using auto-unseal, using Google Cloud KMS. The
          # GKMS keys must already exist, and the cluster must have a service account
          # that is authorized to access GCP KMS.
          #seal "gcpckms" {
          #   project     = "vault-helm-dev"
          #   region      = "global"
          #   key_ring    = "vault-helm-unseal-kr"
          #   crypto_key  = "vault-helm-unseal-key"
          #}

          # Example configuration for enabling Prometheus metrics in your config.
          telemetry {
            prometheus_retention_time = "30s"
            disable_hostname = true
          }

      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/redirect-entry-point: https
          traefik.ingress.kubernetes.io/redirect-permanent: "true"

        hosts:
          - host: vault.services.mkz.me
            paths: []

        ingressClassName: traefik

        tls:
          - secretName: vault-tls
            hosts:
              - vault.services.mkz.me

    injector:
      logLevel: "debug"
      logFormat: "standard"

    ui:
      enabled: true

    serverTelemetry:
      serviceMonitor:
        enabled: true
      prometheusRules:
        enabled: true
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  annotations:
    configMapHash: 8feede43ff870b2b267ad69aab66b2d9bf6be898b1bb6b2c2275dc3f7154ec34
  name: vault
  namespace: vault
spec:
  chart:
    spec:
      chart: vault
      sourceRef:
        kind: HelmRepository
        name: hashicorp
        namespace: flux-system
      version: 0.28.0
  install:
    createNamespace: false
    skipCRDs: false
  interval: 10m0s
  timeout: 5m0s
  values: {}
  valuesFrom:
    - kind: ConfigMap
      name: vault-helm-val-vault-c826ee21
      valuesKey: values.yaml
